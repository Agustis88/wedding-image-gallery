@page "/"
@using WeddingImageGallery.Shared
@inject HttpClient Http

<ul class="nav nav-tabs">
	@foreach (var gallery in galleries)
	{
		<li class="nav-item">
			<a class="nav-link @(gallery == currentGallery ? "active" : "")" href="#" @onclick="@(() => SetCurrentGallery(gallery))">@gallery.Name</a>
		</li>
	}
</ul>

<div id="images">
	@for (int idx = 0; idx < images.Count; ++idx)
	{
		var image = images[idx];
		<div class="item">
			<a href="@image.FullUrl" data-lightbox="@("image" + idx)">
				<img src="@(image.FullUrl)?width=200" alt="Image">
			</a>
		</div>
	}

	@if (hasMore)
	{
		<button class="btn btn-primary show-more" @onclick="@LoadPage">Show more</button>
	}
</div>

@code {

	private bool hasMore = true;
	private Gallery[] galleries = new Gallery[0];
	private Gallery currentGallery = null;
	private List<ImageProperties> images = new List<ImageProperties>();

	private async Task LoadPage()
	{
		if (currentGallery == null)
			return;
		var page = await Http.GetFromJsonAsync<ImageProperties[]>("api/galleries/" + currentGallery.Path + "/images?skip=" + images.Count);
		images.AddRange(page);
		hasMore = page.Length >= Constants.PageSize;
	}

	private async Task SetCurrentGallery(Gallery gallery)
	{
		images.Clear();
		currentGallery = gallery;
		await LoadPage();
	}

	protected override async Task OnInitializedAsync()
	{
		galleries = await Http.GetFromJsonAsync<Gallery[]>("api/galleries");
		currentGallery = galleries.FirstOrDefault();
		await LoadPage();
	}

}